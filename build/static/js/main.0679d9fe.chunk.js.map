{"version":3,"sources":["config/firebase.js","screens/DbLogin/index.js","screens/FirebaseRealTime/index.js","screens/HomePage/index.js","screens/LoginUi/index.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","DbLogin","HomePage","makeStyles","theme","margin","spacing","IconButtonStyle","padding","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAWEA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8CAIMR,QAAf,ECRaA,EAASS,WACVT,EAASS,WAAWC,IAAI,SCDvBV,EAASS,WACVT,EAASS,WAAWC,IAAI,S,0FA0JvBC,I,QC5IAC,GCQGC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNA,OAAQD,EAAME,QAAQ,IAExBC,gBAAiB,CACfC,QAAS,OD3BI,WAEf,OACE,gCACA,0CACA,0CACA,0CACA,+CEYWC,MAhBf,WACE,OACE,qBAAKC,UAAU,MAAf,SAMI,cAAC,EAAD,OCbRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0679d9fe.chunk.js","sourcesContent":["import  firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAoZKr4kC4eynwdAffsbggPInXxqMwDMZw\",\r\n    authDomain: \"work-f0bf1.firebaseapp.com\",\r\n    databaseURL: \"https://work-f0bf1.firebaseio.com\",\r\n    projectId: \"work-f0bf1\",\r\n    storageBucket: \"work-f0bf1.appspot.com\",\r\n    messagingSenderId: \"434598527640\",\r\n    appId: \"1:434598527640:web:7052499332a815082886ed\"\r\n  }\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React, { useState, useEffect } from 'react'\r\nimport { data } from \"../../constants\";\r\nimport firebase from \"../../config/firebase\";\r\n\r\n\r\nlet database = firebase.database()\r\nlet dataRef = firebase.database().ref('/data');\r\n\r\n\r\nfunction DbLogin() {\r\nconst [name, setName] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\n\r\nconst [usersData, setUsersData] = useState([])\r\nconst [isLoading, setIsLoading] = useState(true)\r\nconst [checkStatus, setCheckStatus] = useState('all');\r\n\r\n\r\nuseEffect(() => {\r\n  userList();\r\n  console.log(\"Use Effect Called\"); \r\n}, [])\r\n\r\n\r\n\r\nconst userList = () =>{\r\n  setCheckStatus('all');\r\n  dataRef.once('value', (snapshot) =>{\r\n    const data = snapshot.val();\r\n    const numOfChild = snapshot.numChildren();\r\n    const dataKey = Object.keys(data)\r\n\r\n    \r\n    \r\n    dataKey.map((e, index) => {\r\n\r\n    usersData.push({key: e, ...data[e]})\r\n    if(usersData.length === numOfChild){\r\nsetIsLoading(false)\r\n      \r\n    }\r\n\r\n    })\r\n\r\n    // console.log(dataKey)\r\n\r\n  \r\n  });\r\n\r\n  // const userDataList = database.ref('/data');\r\n  // userDataList.on('value', gotData, erorData)\r\n}\r\n\r\n// function gotData(data){\r\n//   console.log(data.val());\r\n\r\n// }\r\n// function erorData(error){\r\n//   console.log(error)\r\n// }\r\n\r\n\r\n\r\n\r\nconst submitLogin = () => {\r\n\r\n    database.ref().child('/data').push({email, name, password})\r\n    console.log('submited:  '+ email)\r\n  \r\n\r\n    \r\n  }\r\n\r\n    return(\r\n    <div>\r\n\r\n  <label>Name:</label> \r\n      <br />\r\n      <br />\r\n    <input type=\"text\" value={name} onChange={e => { \r\n       setName(e.target.value)\r\n      console.log(e.target.value)\r\n\r\n      }} /> \r\n    <br/>\r\n    <br/>\r\n\r\n      <label>Email:</label> \r\n      <br />\r\n      <br />\r\n    <input type=\"email\" value={email} onChange={e => { \r\n       setEmail(e.target.value)\r\n      console.log(e.target.value)\r\n\r\n      }} /> \r\n    <br/>\r\n    <br/>\r\n\r\n      <label>Password:</label>\r\n      <br />\r\n      <br />\r\n    <input type=\"password\" value={password} onChange={e => { \r\n      setPassword(e.target.value)\r\n      console.log(e.target.value)\r\n      }} /> \r\n      <br/>\r\n      <br/>\r\n\r\n\r\n      <br/>\r\n     <button onClick={submitLogin}> Submit </button> \r\n\r\n\r\n<div>\r\n  \r\n   \r\n   </div>\r\n  \r\n          <br />\r\n     <br />\r\n     <button onClick={userList}> User List </button>\r\n     <button onClick={() => setCheckStatus('active')}> Active User List </button>\r\n     <button onClick={() => setCheckStatus('inactive')}> Inactive User List </button>\r\n     <br />\r\n     <br />\r\n\r\n     <div>\r\n       \r\n     <table border='1px solid black'>\r\n       <tr>\r\n             <th>Name</th>\r\n             <th>Email</th>\r\n             <th>Password</th>\r\n             <th>Status</th>\r\n      </tr>\r\n       {!isLoading ? usersData.map((list, i) =>{\r\n       \r\n          return   (list.status === checkStatus || checkStatus === 'all' ) && <tr>\r\n             <td>{list.name}</td>\r\n             <td>{list.email}</td>\r\n             <td>{list.password}</td>\r\n             <td>{list.status}</td>\r\n       </tr>\r\n        }) : <div>Loading</div> }\r\n           </table>\r\n\r\n     </div>\r\n     </div>\r\n\r\n     \r\n    ); \r\n}\r\n\r\nexport default DbLogin;","import React, { useState, useEffect } from 'react'\r\nimport { data } from \"../../constants\";\r\nimport firebase from \"../../config/firebase\";\r\n\r\n\r\nlet database = firebase.database()\r\nlet dataRef = firebase.database().ref('/data');\r\n\r\n\r\nfunction DbLogin() {\r\nconst [name, setName] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\n\r\nconst [usersData, setUsersData] = useState([])\r\nconst [isLoading, setIsLoading] = useState(true)\r\nconst [checkStatus, setCheckStatus] = useState('all');\r\n\r\n\r\nuseEffect(() => {\r\n  userList();\r\n  console.log(\"Use Effect Called\"); \r\n}, [])\r\n\r\n\r\n\r\nconst userList = () =>{\r\n  setCheckStatus('all');\r\n  let dataCont = [];\r\n  dataRef.on('value', (snapshot) =>{\r\n    setUsersData([]);\r\n    dataCont = [];\r\n    setIsLoading(true);\r\n    const data = snapshot.val();\r\n    const numOfChild = snapshot.numChildren();\r\n    const dataKey = Object.keys(data)\r\n\r\n    \r\n    \r\n    dataKey.map((e, index) => {\r\n\r\n    dataCont.push({key: e, ...data[e]})\r\n    if(dataCont.length === numOfChild){\r\n      setUsersData(dataCont);\r\n\r\n      setIsLoading(false)\r\n      \r\n    }\r\n\r\n    })\r\n\r\n    // console.log(dataKey)\r\n\r\n  \r\n  });\r\n\r\n  // const userDataList = database.ref('/data');\r\n  // userDataList.on('value', gotData, erorData)\r\n}\r\n\r\n// function gotData(data){\r\n//   console.log(data.val());\r\n\r\n// }\r\n// function erorData(error){\r\n//   console.log(error)\r\n// }\r\n\r\n\r\n\r\n\r\nconst submitLogin = () => {\r\n\r\n    database.ref().child('/data').push({email, name, password})\r\n    console.log('submited:  '+ email)\r\n  \r\n\r\n    \r\n  }\r\n\r\n    return(\r\n    <div>\r\n\r\n  <label>Name:</label> \r\n      <br />\r\n      <br />\r\n    <input type=\"text\" value={name} onChange={e => { \r\n       setName(e.target.value)\r\n      console.log(e.target.value)\r\n\r\n      }} /> \r\n    <br/>\r\n    <br/>\r\n\r\n      <label>Email:</label> \r\n      <br />\r\n      <br />\r\n    <input type=\"email\" value={email} onChange={e => { \r\n       setEmail(e.target.value)\r\n      console.log(e.target.value)\r\n\r\n      }} /> \r\n    <br/>\r\n    <br/>\r\n\r\n      <label>Password:</label>\r\n      <br />\r\n      <br />\r\n    <input type=\"password\" value={password} onChange={e => { \r\n      setPassword(e.target.value)\r\n      console.log(e.target.value)\r\n      }} /> \r\n      <br/>\r\n      <br/>\r\n\r\n\r\n      <br/>\r\n     <button onClick={submitLogin}> Submit </button> \r\n\r\n\r\n<div>\r\n  \r\n   \r\n   </div>\r\n  \r\n          <br />\r\n     <br />\r\n     <button onClick={userList}> User List </button>\r\n     <button onClick={() => setCheckStatus('active')}> Active User List </button>\r\n     <button onClick={() => setCheckStatus('inactive')}> Inactive User List </button>\r\n     <br />\r\n     <br />\r\n\r\n     <div>\r\n       \r\n     <table border='1px solid black'>\r\n       <tr>\r\n             <th>Name</th>\r\n             <th>Email</th>\r\n             <th>Password</th>\r\n             <th>Status</th>\r\n      </tr>\r\n       {!isLoading ? usersData.map((list, i) =>{\r\n       \r\n          return   (list.status === checkStatus || checkStatus === 'all' ) && <tr>\r\n             <td>{list.name}</td>\r\n             <td>{list.email}</td>\r\n             <td>{list.password}</td>\r\n             <td>{list.status}</td>\r\n       </tr>\r\n        }) : <div>Loading</div> }\r\n           </table>\r\n\r\n     </div>\r\n     </div>\r\n\r\n     \r\n    ); \r\n}\r\n\r\nexport default DbLogin;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n  return (\r\n    <div>\r\n    <h1>homepage</h1>\r\n    <h1>homepage</h1>\r\n    <h1>homepage</h1>\r\n    <h1>homepage</h1>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Paper,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardActions,\r\n  Typography,\r\n  CardContent,\r\n  Container,\r\n  TextField,\r\n  InputAdornment,\r\n  Input,\r\n  Grid,\r\n  IconButton,\r\n  Text,\r\n  InputLabel,\r\n  useForkRef,\r\n\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff, AccountCircle } from '@material-ui/icons';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport { data } from '../../constants';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  IconButtonStyle: {\r\n    padding: 0\r\n  }\r\n\r\n})\r\n);\r\n\r\n\r\nconst LoginUi = () => {\r\n\r\n\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const showEntry = () => {\r\n    \r\n    const dataObj = {\r\n      userEmail,\r\n      userPassword\r\n    }\r\n    \r\n    const strgFor = JSON.stringify(dataObj)\r\n\r\n    localStorage.setItem('dataObject', strgFor);\r\n    // setUserEmail();\r\n    \r\n    // localStorage.setItem('Password', );\r\n    // setUserEmail();\r\n    \r\n    console.log('submited ', strgFor)\r\n  }\r\n\r\n  return (\r\n\r\n\r\n    <Container maxWidth=\"sm\" >\r\n      <Card style={{ marginTop: '5%' }}>\r\n        <CardActionArea>\r\n          <h1 style={{\r\n            color: \"red\",\r\n            textAlign: \"center\"\r\n          }}>Login Page</h1>\r\n          <CardContent>\r\n\r\n            <Grid container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item xs={12} spacing={1} alignItems=\"flex-end\">\r\n                <InputLabel>User Email</InputLabel>\r\n                <Input\r\n                  id=\"input-with-icon-adornment\"\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  }\r\n                  label=\"Enter Your Email\"\r\n\r\n                  value={userEmail} \r\n                  onChange={e => setUserEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <br />\r\n              <Grid item xs={12} spacing={1} alignItems=\"flex-end\">\r\n                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                <Input\r\n                  id=\"standard-adornment-password\"\r\n                  type={values.showPassword ? 'text' : 'password'}\r\n                  value={values.password}\r\n                  onChange={e => setUserPassword(e.target.value)}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <IconButton className={classes.IconButtonStyle}\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                      >\r\n                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  value={userPassword} \r\n \r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={showEntry}>\r\n            Login\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Container>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default LoginUi;","// import FbPost from './screens/FbPost'\r\n// import  Login from './screens/Login'\r\nimport DbLogin from \"./screens/DbLogin\";\r\nimport FirebaseRealTime from './screens/FirebaseRealTime'\r\nimport LoginUi from './screens/LoginUi'\r\nimport HomePage from './screens/HomePage'\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {/* <FbPost />  */\r\n        // <Login />\r\n        // <DbLogin />\r\n        // <FirebaseRealTime/>\r\n        <HomePage/>\r\n        // <LoginUi />H\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}