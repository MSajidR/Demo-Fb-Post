{"version":3,"sources":["config/firebase.js","screens/DbLogin/index.js","screens/FirebaseRealTime/index.js","components/NavBar/index.js","screens/LoginUi/index.js","screens/LoginHome/index.js","screens/WeatherApi/index.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","DbLogin","drawerWidth","makeStyles","theme","margin","spacing","IconButtonStyle","padding","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","mainDiv","marginTop","WeatherApi","React","useState","posts","setPosts","axios","get","then","res","ApiData","data","console","log","map","post","name","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAWEA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8CAIMR,QAAf,ECRaA,EAASS,WACVT,EAASS,WAAWC,IAAI,SCDvBV,EAASS,WACVT,EAASS,WAAWC,IAAI,S,wGA0JvBC,I,SC5ITC,GCSYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNA,OAAQD,EAAME,QAAQ,IAExBC,gBAAiB,CACfC,QAAS,O,8GDdO,K,GAEFL,aAAW,SAACC,GAAD,MAAY,CACvCK,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,WAAYR,EAAMS,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQX,EAAMS,YAAYE,OAAOC,MACjCC,SAAUb,EAAMS,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAAiBlB,EAAjB,OACLmB,WAAYnB,EACZU,WAAYR,EAAMS,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQX,EAAMS,YAAYE,OAAOO,QACjCL,SAAUb,EAAMS,YAAYI,SAASM,kBAGzCC,WAAY,CACVC,YAAarB,EAAME,QAAQ,IAE7BoB,KAAM,CACJhB,QAAS,QAEXiB,OAAQ,CACNP,MAAOlB,EACP0B,WAAY,GAEdC,YAAa,CACXT,MAAOlB,GAET4B,aAAa,yBACXpB,QAAS,OACTqB,WAAY,SACZvB,QAASJ,EAAME,QAAQ,EAAG,IAEvBF,EAAM4B,OAAOC,SALN,IAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACV5B,QAASJ,EAAME,QAAQ,GACvBM,WAAYR,EAAMS,YAAYC,OAAO,SAAU,CAC7CC,OAAQX,EAAMS,YAAYE,OAAOC,MACjCC,SAAUb,EAAMS,YAAYI,SAASC,gBAEvCG,YAAY,KAEdgB,aAAc,CACZzB,WAAYR,EAAMS,YAAYC,OAAO,SAAU,CAC7CC,OAAQX,EAAMS,YAAYE,OAAOO,QACjCL,SAAUb,EAAMS,YAAYI,SAASM,iBAEvCF,WAAY,GAEdiB,QAAQ,CACNC,UAAW,UEjDGpC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNA,OAAQD,EAAME,QAAQ,IAExBC,gBAAiB,CACfC,QAAS,O,gBCQEgC,EArCI,WACnB,IADyB,EAGCC,IAAMC,SAAS,IAHhB,mBAGlBC,EAHkB,KAGXC,EAHW,KAuBrB,OAhBJC,IAAMC,IAAN,0EANe,qCAOdC,MAAK,SAAAC,GACF,IAAMC,EAAUD,EAAIE,KACpBN,EAAS,CAAEK,YACXE,QAAQC,IAAIT,MAaR,gCACA,4CACA,6BACGA,EAAMU,KAAI,SAAAC,GAAI,OACb,6BAAKA,EAAKC,gBCRPC,MAZf,WAEG,OACC,8BAEE,cAAC,EAAD,OCdNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0966df09.chunk.js","sourcesContent":["import  firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAoZKr4kC4eynwdAffsbggPInXxqMwDMZw\",\r\n    authDomain: \"work-f0bf1.firebaseapp.com\",\r\n    databaseURL: \"https://work-f0bf1.firebaseio.com\",\r\n    projectId: \"work-f0bf1\",\r\n    storageBucket: \"work-f0bf1.appspot.com\",\r\n    messagingSenderId: \"434598527640\",\r\n    appId: \"1:434598527640:web:7052499332a815082886ed\"\r\n  }\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React, { useState, useEffect } from 'react'\r\nimport { data } from \"../../constants\";\r\nimport firebase from \"../../config/firebase\";\r\n\r\n\r\nlet database = firebase.database()\r\nlet dataRef = firebase.database().ref('/data');\r\n\r\n\r\nfunction DbLogin() {\r\nconst [name, setName] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\n\r\nconst [usersData, setUsersData] = useState([])\r\nconst [isLoading, setIsLoading] = useState(true)\r\nconst [checkStatus, setCheckStatus] = useState('all');\r\n\r\n\r\nuseEffect(() => {\r\n  userList();\r\n  console.log(\"Use Effect Called\"); \r\n}, [])\r\n\r\n\r\n\r\nconst userList = () =>{\r\n  setCheckStatus('all');\r\n  dataRef.once('value', (snapshot) =>{\r\n    const data = snapshot.val();\r\n    const numOfChild = snapshot.numChildren();\r\n    const dataKey = Object.keys(data)\r\n\r\n    \r\n    \r\n    dataKey.map((e, index) => {\r\n\r\n    usersData.push({key: e, ...data[e]})\r\n    if(usersData.length === numOfChild){\r\nsetIsLoading(false)\r\n      \r\n    }\r\n\r\n    })\r\n\r\n    // console.log(dataKey)\r\n\r\n  \r\n  });\r\n\r\n  // const userDataList = database.ref('/data');\r\n  // userDataList.on('value', gotData, erorData)\r\n}\r\n\r\n// function gotData(data){\r\n//   console.log(data.val());\r\n\r\n// }\r\n// function erorData(error){\r\n//   console.log(error)\r\n// }\r\n\r\n\r\n\r\n\r\nconst submitLogin = () => {\r\n\r\n    database.ref().child('/data').push({email, name, password})\r\n    console.log('submited:  '+ email)\r\n  \r\n\r\n    \r\n  }\r\n\r\n    return(\r\n    <div>\r\n\r\n  <label>Name:</label> \r\n      <br />\r\n      <br />\r\n    <input type=\"text\" value={name} onChange={e => { \r\n       setName(e.target.value)\r\n      console.log(e.target.value)\r\n\r\n      }} /> \r\n    <br/>\r\n    <br/>\r\n\r\n      <label>Email:</label> \r\n      <br />\r\n      <br />\r\n    <input type=\"email\" value={email} onChange={e => { \r\n       setEmail(e.target.value)\r\n      console.log(e.target.value)\r\n\r\n      }} /> \r\n    <br/>\r\n    <br/>\r\n\r\n      <label>Password:</label>\r\n      <br />\r\n      <br />\r\n    <input type=\"password\" value={password} onChange={e => { \r\n      setPassword(e.target.value)\r\n      console.log(e.target.value)\r\n      }} /> \r\n      <br/>\r\n      <br/>\r\n\r\n\r\n      <br/>\r\n     <button onClick={submitLogin}> Submit </button> \r\n\r\n\r\n<div>\r\n  \r\n   \r\n   </div>\r\n  \r\n          <br />\r\n     <br />\r\n     <button onClick={userList}> User List </button>\r\n     <button onClick={() => setCheckStatus('active')}> Active User List </button>\r\n     <button onClick={() => setCheckStatus('inactive')}> Inactive User List </button>\r\n     <br />\r\n     <br />\r\n\r\n     <div>\r\n       \r\n     <table border='1px solid black'>\r\n       <tr>\r\n             <th>Name</th>\r\n             <th>Email</th>\r\n             <th>Password</th>\r\n             <th>Status</th>\r\n      </tr>\r\n       {!isLoading ? usersData.map((list, i) =>{\r\n       \r\n          return   (list.status === checkStatus || checkStatus === 'all' ) && <tr>\r\n             <td>{list.name}</td>\r\n             <td>{list.email}</td>\r\n             <td>{list.password}</td>\r\n             <td>{list.status}</td>\r\n       </tr>\r\n        }) : <div>Loading</div> }\r\n           </table>\r\n\r\n     </div>\r\n     </div>\r\n\r\n     \r\n    ); \r\n}\r\n\r\nexport default DbLogin;","import React, { useState, useEffect } from 'react'\r\nimport { data } from \"../../constants\";\r\nimport firebase from \"../../config/firebase\";\r\n\r\n\r\nlet database = firebase.database()\r\nlet dataRef = firebase.database().ref('/data');\r\n\r\n\r\nfunction DbLogin() {\r\nconst [name, setName] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\n\r\nconst [usersData, setUsersData] = useState([])\r\nconst [isLoading, setIsLoading] = useState(true)\r\nconst [checkStatus, setCheckStatus] = useState('all');\r\n\r\n\r\nuseEffect(() => {\r\n  userList();\r\n  console.log(\"Use Effect Called\"); \r\n}, [])\r\n\r\n\r\n\r\nconst userList = () =>{\r\n  setCheckStatus('all');\r\n  let dataCont = [];\r\n  dataRef.on('value', (snapshot) =>{\r\n    setUsersData([]);\r\n    dataCont = [];\r\n    setIsLoading(true);\r\n    const data = snapshot.val();\r\n    const numOfChild = snapshot.numChildren();\r\n    const dataKey = Object.keys(data)\r\n\r\n    \r\n    \r\n    dataKey.map((e, index) => {\r\n\r\n    dataCont.push({key: e, ...data[e]})\r\n    if(dataCont.length === numOfChild){\r\n      setUsersData(dataCont);\r\n\r\n      setIsLoading(false)\r\n      \r\n    }\r\n\r\n    })\r\n\r\n    // console.log(dataKey)\r\n\r\n  \r\n  });\r\n\r\n  // const userDataList = database.ref('/data');\r\n  // userDataList.on('value', gotData, erorData)\r\n}\r\n\r\n// function gotData(data){\r\n//   console.log(data.val());\r\n\r\n// }\r\n// function erorData(error){\r\n//   console.log(error)\r\n// }\r\n\r\n\r\n\r\n\r\nconst submitLogin = () => {\r\n\r\n    database.ref().child('/data').push({email, name, password})\r\n    console.log('submited:  '+ email)\r\n  \r\n\r\n    \r\n  }\r\n\r\n    return(\r\n    <div>\r\n\r\n  <label>Name:</label> \r\n      <br />\r\n      <br />\r\n    <input type=\"text\" value={name} onChange={e => { \r\n       setName(e.target.value)\r\n      console.log(e.target.value)\r\n\r\n      }} /> \r\n    <br/>\r\n    <br/>\r\n\r\n      <label>Email:</label> \r\n      <br />\r\n      <br />\r\n    <input type=\"email\" value={email} onChange={e => { \r\n       setEmail(e.target.value)\r\n      console.log(e.target.value)\r\n\r\n      }} /> \r\n    <br/>\r\n    <br/>\r\n\r\n      <label>Password:</label>\r\n      <br />\r\n      <br />\r\n    <input type=\"password\" value={password} onChange={e => { \r\n      setPassword(e.target.value)\r\n      console.log(e.target.value)\r\n      }} /> \r\n      <br/>\r\n      <br/>\r\n\r\n\r\n      <br/>\r\n     <button onClick={submitLogin}> Submit </button> \r\n\r\n\r\n<div>\r\n  \r\n   \r\n   </div>\r\n  \r\n          <br />\r\n     <br />\r\n     <button onClick={userList}> User List </button>\r\n     <button onClick={() => setCheckStatus('active')}> Active User List </button>\r\n     <button onClick={() => setCheckStatus('inactive')}> Inactive User List </button>\r\n     <br />\r\n     <br />\r\n\r\n     <div>\r\n       \r\n     <table border='1px solid black'>\r\n       <tr>\r\n             <th>Name</th>\r\n             <th>Email</th>\r\n             <th>Password</th>\r\n             <th>Status</th>\r\n      </tr>\r\n       {!isLoading ? usersData.map((list, i) =>{\r\n       \r\n          return   (list.status === checkStatus || checkStatus === 'all' ) && <tr>\r\n             <td>{list.name}</td>\r\n             <td>{list.email}</td>\r\n             <td>{list.password}</td>\r\n             <td>{list.status}</td>\r\n       </tr>\r\n        }) : <div>Loading</div> }\r\n           </table>\r\n\r\n     </div>\r\n     </div>\r\n\r\n     \r\n    ); \r\n}\r\n\r\nexport default DbLogin;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  mainDiv:{\r\n    marginTop: '5%'\r\n  },\r\n}));\r\n\r\nconst NavBar = ( props ) =>  {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n   <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Persistent drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"temporary\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n<div className={classes.mainDiv}>\r\n    {props.children}\r\n</div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Paper,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardActions,\r\n  Typography,\r\n  CardContent,\r\n  Container,\r\n  TextField,\r\n  InputAdornment,\r\n  Input,\r\n  Grid,\r\n  IconButton,\r\n  Text,\r\n  InputLabel,\r\n  useForkRef,\r\n\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff, AccountCircle } from '@material-ui/icons';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport { data } from '../../constants';\r\nimport HomePage from '../HomePage';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  IconButtonStyle: {\r\n    padding: 0\r\n  }\r\n\r\n})\r\n);\r\n\r\n\r\n\r\nconst LoginUi = () => {\r\n  const [CheckOut, setCheckOut] = useState(false)\r\n\r\n\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n  const handleChange = (he) => (event) => {\r\n    setValues({ ...values, [he]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const showEntry = () => {\r\n    \r\n\r\nsetCheckOut(true)\r\n\r\n    console.log(CheckOut)\r\n\r\n    const dataObj = {\r\n      userEmail,\r\n      userPassword\r\n    }\r\n    \r\n    const strgFor = JSON.stringify(dataObj)\r\n\r\n    localStorage.setItem('dataObject', strgFor);\r\n    // setUserEmail();\r\n    \r\n    // localStorage.setItem('Password', );\r\n    // setUserEmail();\r\n    \r\n    console.log('submited ', strgFor)\r\n  }\r\n\r\n  return (\r\n\r\n  <div> {!CheckOut ? <Container maxWidth=\"sm\" >\r\n  <Card style={{ marginTop: '5%' }}>\r\n    <CardActionArea>\r\n      <h1 style={{\r\n        color: \"red\",\r\n        textAlign: \"center\"\r\n      }}>Login Page</h1>\r\n      <CardContent>\r\n\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item xs={12} spacing={1} alignItems=\"flex-end\">\r\n            <InputLabel>User Email</InputLabel>\r\n            <Input\r\n              id=\"input-with-icon-adornment\"\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              }\r\n              label=\"Enter Your Email\"\r\n\r\n              value={userEmail} \r\n              onChange={e => setUserEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <br />\r\n          <Grid item xs={12} spacing={1} alignItems=\"flex-end\">\r\n            <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n            <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={values.password}\r\n              onChange={e => setUserPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <IconButton className={classes.IconButtonStyle}\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              value={userPassword} \r\n\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </CardContent>\r\n    </CardActionArea>\r\n    <CardActions>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={showEntry} >\r\n        Login\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n</Container> : <div> <HomePage/> </div> }\r\n    \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default LoginUi;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Paper,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardActions,\r\n  Typography,\r\n  CardContent,\r\n  Container,\r\n  TextField,\r\n  InputAdornment,\r\n  Input,\r\n  Grid,\r\n  IconButton,\r\n  Text,\r\n  InputLabel,\r\n  useForkRef,\r\n\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff, AccountCircle } from '@material-ui/icons';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport { data } from '../../constants';\r\nimport HomePage from '../HomePage';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  IconButtonStyle: {\r\n    padding: 0\r\n  }\r\n\r\n})\r\n);\r\n\r\n\r\n\r\nconst LoginHome = () => {\r\n  const [CheckOut, setCheckOut] = useState(false)\r\n\r\n\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n  const handleChange = (he) => (event) => {\r\n    setValues({ ...values, [he]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const ViewHome = (props) =>{\r\n\r\n    setCheckOut(true)\r\n\r\n    console.log(CheckOut)\r\n    return {props}\r\n\r\n  }\r\n\r\n  const showEntry = () => {\r\n    \r\n\r\n\r\n    const dataObj = {\r\n      userEmail,\r\n      userPassword\r\n    }\r\n    \r\n    const strgFor = JSON.stringify(dataObj)\r\n\r\n    localStorage.setItem('dataObject', strgFor);\r\n    // setUserEmail();\r\n    \r\n    // localStorage.setItem('Password', );\r\n    // setUserEmail();\r\n    \r\n    console.log('submited ', strgFor)\r\n  }\r\n\r\n  return (\r\n<Container maxWidth=\"sm\" >\r\n  <Card style={{ marginTop: '5%' }}>\r\n    <CardActionArea>\r\n      <h1 style={{\r\n        color: \"red\",\r\n        textAlign: \"center\"\r\n      }}>Login Page</h1>\r\n      <CardContent>\r\n\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item xs={12} spacing={1} alignItems=\"flex-end\">\r\n            <InputLabel>User Email</InputLabel>\r\n            <Input\r\n              id=\"input-with-icon-adornment\"\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </InputAdornment>\r\n              }\r\n              label=\"Enter Your Email\"\r\n\r\n              value={userEmail} \r\n              onChange={e => setUserEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <br />\r\n          <Grid item xs={12} spacing={1} alignItems=\"flex-end\">\r\n            <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n            <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={values.password}\r\n              onChange={e => setUserPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <IconButton className={classes.IconButtonStyle}\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              value={userPassword} \r\n\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </CardContent>\r\n    </CardActionArea>\r\n    <CardActions>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={showEntry} >\r\n        Login\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={ViewHome} >\r\n        View Home\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n</Container>\r\n  );\r\n}\r\n\r\n\r\nexport default LoginHome;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios'\r\n\r\n\r\nconst WeatherApi = () => {\r\nconst apiKey = \"901d672d14c778eefb41af3fd3871f1f\"\r\n\r\nconst [posts, setPosts] = React.useState([]);\r\n\r\n\r\n\r\naxios.get(`https:api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${apiKey}`)\r\n.then(res => {\r\n    const ApiData = res.data;\r\n    setPosts({ ApiData });\r\n    console.log(posts)\r\n  })\r\n    // React.useEffect(() => {\r\n    //     axios.get(`https:api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${apiKey}`)\r\n    //       .then(res => {\r\n    //         const newPosts = res\r\n    //           .map(obj => obj.data);\r\n      \r\n    //         setPosts(newPosts);\r\n    //       });\r\n    //   }, []);\r\n\r\n    return(\r\n        <div>\r\n        <h1>/r/reactjs</h1>\r\n        <ul>\r\n          {posts.map(post => (\r\n            <li>{post.name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default WeatherApi;","// import FbPost from './screens/FbPost'\r\n// import  Login from './screens/Login'\r\nimport DbLogin from \"./screens/DbLogin\";\r\nimport FirebaseRealTime from './screens/FirebaseRealTime'\r\nimport LoginUi from './screens/LoginUi'\r\nimport HomePage from './screens/HomePage'\r\nimport NavBar from \"./components/NavBar\";\r\nimport LoginHome from \"./screens/LoginHome\";\r\nimport WeatherApi from './screens/WeatherApi'\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\nfunction App() {\r\n   \r\n   return( \r\n    <div>  \r\n      \r\n      <WeatherApi />\r\n\r\n   </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}